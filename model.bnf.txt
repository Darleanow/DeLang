<program> ::= <statement>*

<statement> ::= <var-declaration> | <type-declaration> | <condition> | <loop> | <operation> | <print-function> | <comment>

<var-declaration> ::= <identifier> "is" <expression>
<type-declaration> ::= <identifier> ":" <type> "is" <expression>
<type> ::= "int" | "string" | "float" | "bool" | "array"

<expression> ::= <literal> | <identifier> | <operation> | <function-call>
<literal> ::= <number> | <string> | <boolean> | <array>
<number> ::= [0-9]+("." [0-9]+)?
<string> ::= "\"" .* "\""
<boolean> ::= "true" | "false"
<array> ::= "[" <expression> ("," <expression>)* "]"

<condition> ::= "?" <expression> "{" <statement>* "}" <else-if-condition>* <else-condition>?
<else-if-condition> ::= "?" <expression> "{" <statement>* "}"
<else-condition> ::= ":" "{" <statement>* "}"

<loop> ::= <for-loop> | <while-loop>
<for-loop> ::= "repeat" <identifier> "->" <range> "{" <statement>* "}"
<while-loop> ::= "while" <expression> "{" <statement>* "}"
<range> ::= <number> ".." <number>

<operation> ::= <expression> <operator> <expression>
<operator> ::= "+" | "-" | "*" | "/" | "==" | ">" | "and" | "or"

<function-call> ::= <function-name> "(" <expression> ("," <expression>)* ")"
<function-name> ::= "lengthOf" | "maxOf" | "sumOf"

<print-function> ::= "say" <expression>

<comment> ::= "//" .* 

<identifier> ::= [a-zA-Z_][a-zA-Z0-9_]*